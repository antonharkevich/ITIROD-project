labels = ["0102", "0202", "0302", "0402", "0502", "0602", "0702"]; 
data = [ 1901, 1910, 1920, 1956, 1940, 1996, 1930]; 


let canvas = document.getElementById('canvas'); 

    let ctx = canvas.getContext('2d');
    let w = canvas.width;
    let h = canvas.height;

    let w_start = 0.08 * w;
    let w_finish = 0.85 * w; 

    let h_start = 0.1 * h;
    let h_finish = 0.9 * h;

    let w_length = w_finish - w_start;
    let h_length = h_finish - h_start;


    ctx.fillStyle = "black"; // Задаём чёрный цвет для линий 
    ctx.lineWidth = 2.0; // Ширина линии
    ctx.beginPath(); // Запускает путь
    ctx.moveTo(0.08 * w, 0.02 * h); // Указываем начальный путь
    ctx.lineTo(0.08 * w, 0.9 * h); // Перемешаем указатель
    ctx.lineTo(0.99 * w, 0.9 * h); // Ещё раз перемешаем указатель
    ctx.stroke(); // Делаем контур

    ctx.font = '9px serif';
    

    ctx.font = '9px serif';
    // Массив с меткам месяцев


    // Объявляем массив лейблов графика



    let index_labels = Math.floor(labels.length/5);


    // Выводим меток
    for(var i = 1; i < 6; i++) { 
        ctx.fillText(labels[i * index_labels],(0.08*w)+ (i*index_labels*w_length/labels.length) - 0.055 * w, 0.97 * h); 
        ctx.strokeStyle = 'blue';
        ctx.beginPath(); 
        ctx.moveTo((0.08*w)+ (i*index_labels*w_length/labels.length), 0.1 * h ); 
        ctx.lineTo((0.08*w)+ (i*index_labels*w_length/labels.length), 0.9 * h );  
        ctx.stroke(); 
    }







    // Объявляем массив данных  графика





    min_rate = Math.min(...data);
    max_rate = Math.max(...data);


    min_rate = min_rate - 100;
    max_rate = max_rate + 100;




    // Цвет для рисования
    ctx.fillStyle = "black";
    // Цикл для отображения значений по Y 
    for(let i = 0; i <= 4; i++) { 
        ctx.strokeStyle = 'black';
        ctx.fillText(min_rate+ Math.floor(((4-i)*(max_rate-min_rate)/4)), 0.001 * w, 0.1 * h + i * h / 5); 
        ctx.beginPath(); 
        ctx.moveTo(0.07 * w, 0.1 * h + i * h / 5 ); 
        ctx.lineTo(0.09 * w, 0.1 * h + i * h / 5); 
        ctx.stroke(); 
    }

    ctx.beginPath(); 
    ctx.moveTo(0.08 * w, 0.1 * h + ( (1 - ((data[0] - min_rate)/(max_rate - min_rate)))*h_length) ); 
    for(var i=1; i<data.length; i++) { 
        ctx.strokeStyle = 'red';
        ctx.lineTo(0.08 * w + (i* w_length/data.length ), 0.1 * h + ( (1- ((data[i] - min_rate)/(max_rate - min_rate)))*h_length) );  
    }
    ctx.stroke();










var main_radio=document.getElementById('main_radio');
main_radio.addEventListener('change', function(evt){
    let descriptionId = evt.target.id
    if (descriptionId == "week"){
        labels = ["0102", "0202", "0302", "0402", "0502", "0602", "0702"]; 
        data = [ 1901, 1910, 1920, 1956, 1940, 1996, 1930]; 


    }
    else if(descriptionId == "1 month"){
        labels = ["01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022"]; 
        data = [ 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 2040, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930   ]; 
    }
    else if(descriptionId == "3 month"){
        labels = ["01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022"]; 
        data = [ 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1710, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 2040, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930   ]; 
    }
    else if(descriptionId == "6 month"){
        labels = ["01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", 
        "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022"]; 
        data = [ 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930,
            1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930   ]; 
    }
    else if(descriptionId == "12 month"){
        labels = ["01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", 
        "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022",
        "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", 
        "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022"]; 
        data = [ 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930,
            1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930,
            1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930,
            1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930   ]; 
    }
    else if(descriptionId == "all life"){
        labels = ["01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", 
        "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022",
        "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", 
        "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01032022", "02032022", "03032022", "04032022", "05032022", "06032022", "07032022", "08032022", "09032022", "10032022", "11032022", "12032022", "13032022", "14032022", "15032022", "16032022", "17032022", "18032022", "19032022", "20032022", "21032022", "22032022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022", "01022022", "02022022", "03022022", "04022022", "0502022", "0602022", "07022022", "08022022", "09022022", "10022022", "11022022", "12022022", "13022022", "14022022", "15022022", "16022022", "17022022", "18022022", "19022022", "20022022", "21022022", "22022022", "23022022", "24022022", "25022022", "26022022", "27022022", "28022022",
        "24022022", "25022022", "26022022", "27022022", "28022022","24022022", "25022022", "26022022", "27022022", "28022022","24022022", "25022022", "26022022", "27022022", "28022022"]; 
        data = [ 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930,
            1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930,
            1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930,
            1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930, 1901, 1910, 1920, 1956, 1940, 1996, 1930,
            1920, 1956, 1940, 1996, 1930 , 1920, 1956, 1940, 1996, 1930 , 1920, 1956, 1940, 1996, 1930    ]; 
    }


    let canvas = document.getElementById('canvas'); 

    let ctx = canvas.getContext('2d');
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    let w = canvas.width;
    let h = canvas.height;

    let w_start = 0.08 * w;
    let w_finish = 0.85 * w; 

    let h_start = 0.1 * h;
    let h_finish = 0.9 * h;

    let w_length = w_finish - w_start;
    let h_length = h_finish - h_start;


    ctx.fillStyle = "black"; 
    ctx.strokeStyle = 'black';// Задаём чёрный цвет для линий 
    ctx.lineWidth = 2.0; // Ширина линии
    ctx.beginPath(); // Запускает путь
    ctx.moveTo(0.08 * w, 0.02 * h); // Указываем начальный путь
    ctx.lineTo(0.08 * w, 0.9 * h); // Перемешаем указатель
    ctx.lineTo(0.99 * w, 0.9 * h); // Ещё раз перемешаем указатель
    ctx.stroke(); // Делаем контур

    ctx.font = '9px serif';
    

    ctx.font = '9px serif';
    // Массив с меткам месяцев


    // Объявляем массив лейблов графика



    let index_labels = Math.floor(labels.length/5);


    // Выводим меток
    for(var i = 1; i < 6; i++) { 
        ctx.fillText(labels[i * index_labels - 1],(0.08*w)+ (i*index_labels*w_length/labels.length) - 0.055 * w, 0.97 * h); 
        ctx.strokeStyle = 'blue';
        ctx.beginPath(); 
        ctx.moveTo((0.08*w)+ (i*index_labels*w_length/labels.length), 0.1 * h ); 
        ctx.lineTo((0.08*w)+ (i*index_labels*w_length/labels.length), 0.9 * h );  
        ctx.stroke(); 
    }







    // Объявляем массив данных  графика





    min_rate = Math.min(...data);
    max_rate = Math.max(...data);


    min_rate = min_rate - 100;
    max_rate = max_rate + 100;




    // Цвет для рисования
    ctx.fillStyle = "black";
    // Цикл для отображения значений по Y 
    for(let i = 0; i <= 4; i++) { 
        ctx.strokeStyle = 'black';
        ctx.fillText(min_rate+ Math.floor(((4-i)*(max_rate-min_rate)/4)), 0.001 * w, 0.1 * h + i * h / 5); 
        ctx.beginPath(); 
        ctx.moveTo(0.07 * w, 0.1 * h + i * h / 5 ); 
        ctx.lineTo(0.09 * w, 0.1 * h + i * h / 5); 
        ctx.stroke(); 
    }

    ctx.beginPath(); 
    ctx.moveTo(0.08 * w, 0.1 * h + ( (1 - ((data[0] - min_rate)/(max_rate - min_rate)))*h_length) ); 
    for(var i=1; i<data.length; i++) { 
        ctx.strokeStyle = 'red';
        ctx.lineTo(0.08 * w + (i* w_length/data.length ), 0.1 * h + ( (1- ((data[i] - min_rate)/(max_rate - min_rate)))*h_length) );  
    }
    ctx.stroke();

})





 




